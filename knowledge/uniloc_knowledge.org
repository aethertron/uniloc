- [2016-11-06 Sun 23:48] This is a place for general knowledge!

* Data munging
- Want to be able to easily go between
** Tables
- Want to easily go between
  + csv (one header line at most! no comments)
  + sql
  + excel (xlsx, xls)
  + bluefiles
  + json (maybe)
  + org
  + augmented csv (ctsv (commented csv), etc.)
- org
  + can currently export and import csv with largely no issues
- csv
  + to org is no issue
  + to sql is covered by uniloc python prog

* C++ Dev
- xref-find-references is incredibly useful! (M-? . xref-find-references)
** Semantic
- Semantic shines here but path config isn't project-specific by default!
- However, can use the 'ede' package to acehive this!
- This apparently feed into everything
- Examples:
#+BEGIN_EXAMPLE
create ~/.emacs.d/cedet-projects.el
# define project with 'anchor file' must be file and not dir!
(ede-cpp-root-project "project_root"
                      :file "/dir/to/project_root/Makefile")
(global-ede-mode)
# more flushed out
# important: must prepend with slashes! without /, is relative to current file
(ede-cpp-root-project "project_root"
                      :file "/dir/to/project_root/Makefile"
                      :include-path '("/include1"
                                      "/include2") ;; add more include
                      ;; paths here
                      :system-include-path '("~/linux"))
#+END_EXAMPLE
- Been wrestling with semantic for awhile
- Looks like if you need the mode arg if the mode you want to append
  to is different from the one you're in
- I feel the cleanest way to config include paths is listed below
#+BEGIN_EXAMPLE
(require 'semantic)
(semantic-mode 1)
(semanticdb-mode 1)
(semantic-add-system-include "/home/wgs/uniloc/test/cpp_proj/testlib" 'c++-mode)
#+END_EXAMPLE

*** Code Folding
- There should be a global-semantic-tag-folding-mode variable
- Can't find it, is it only in the newest semantic?
- Look at CEDET outside of distro

** Senator
*** Code folding
* Elisp Packages
nispio/package import functions
* Git
- Move head of a branch: git branch -f branch-name new-tip-commit
- Delete remote branch: git push origin --delete <branch> (git version
  >= 1.7.0)
  + old: git push origin :branch (mod of local-branch:branch)
* Bash

** Bind
- For keybindings and for variables
- To get the escape codes for the arrow keys you can do the following:
  1. Start cat in a terminal (just cat, no further arguments).
  2. Type keys on keyboard, you will get things like ^[[A for up arrow and ^[[B for down arrow.
  3. Replace ^[ with \e.
- Mapping completions
cat results:
| emacs   | cat result | bash |
| "M-p"   | ^[p        | \ep  |
| "M-S-p" | ^[P        | \eP  |



** Gotchas
- source: http://www.tldp.org/LDP/abs/html/gotchas.html
- bash is finicky about whitespace, especially in assignments
- confusing str and math operators
  - "-eq" is for comparing ints, "=" is for literal variables
  - "-lt" is for ints, "<" is for literals/strings
* Linux
** Sudoers
#+BEGIN_EXAMPLE
# as root
adduser foo -a -G wheel
# this means "big wheel"
#+END_EXAMPLE
** Chmod
- Recursively make readable, respecting files: chmod -R g+rX
* Org Mode
** Export
- For easy agenda export, define export settings in customize and then
  invoke org-store-agenda-views
** Tags
- "#+TAGS:" used to specify list of tags to use in a specific buffer
- {} used to denote unrelated tasks
- can prefix with (a) for shortcut mapped to "a"
#+BEGIN_EXAMPLE
#+TAGS: { foo bar } { hot cold froid caliente } { mucho poco } { hombre mujer sin-binario }
#+END_EXAMPLE
-
* Geeknote
- Docs: http://www.geeknote.me/documentation/
- This is a uniloc package!
- Provides access to evernote
- Run geeknote login to login
- When at "Two-Factor Authentication", just press return (unless you set it!)
-
